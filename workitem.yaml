trigger: none  # Manual trigger

pool:
  vmImage: 'ubuntu-latest'

variables:
  OUTAGE_DURATION_MINUTES: 240  # ‚è±Ô∏è Outage duration (e.g., from AI agent in real case)
  SLA_THRESHOLD_MINUTES: 180    # üõ°Ô∏è SLA/threshold for maximum acceptable outage time
  TITLE: 'Outage Mitigation Time Exceeded Please fix this'
  ASSIGNED_TO: 'clovdon1@outlook.com'  # üîß Update with valid user email in Azure DevOps
  TAGS: 'Outage;HighPriority;SLA'
  ORG_URL: 'https://dev.azure.com/clovdon10203/'
  PROJECT: 'My%20First%20Project'
  WORKITEM_TYPE: 'Task'

steps:

- task: Bash@3
  displayName: 'üö® Check outage duration and create work item if needed'
  env:
    SYSTEM_ACCESSTOKEN: $(System.AccessToken)
  inputs:
    targetType: 'inline'
    script: |
      set -euo pipefail

      echo "üîç Checking outage duration..."
      outage_duration=$(echo $OUTAGE_DURATION_MINUTES)
      sla_threshold=$(echo $SLA_THRESHOLD_MINUTES)

      echo "‚è±Ô∏è Outage duration: $outage_duration min"
      echo "üìè SLA threshold: $sla_threshold min"

      if (( outage_duration > sla_threshold )); then
        echo "‚ö†Ô∏è SLA breached: creating work item..."

        title="$TITLE"
        description="An outage incident was detected where the time to mitigate exceeded the SLA.\n\nActual time to mitigate: ${outage_duration} minutes.\nSLA threshold: ${sla_threshold} minutes.\n\nPlease investigate and optimize the mitigation process."

        # Build JSON payload
        payload=$(jq -n \
          --arg title "$title" \
          --arg desc "$description" \
          --arg assignee "$ASSIGNED_TO" \
          --arg tags "$TAGS" \
          '[
            { "op": "add", "path": "/fields/System.Title", "value": $title },
            { "op": "add", "path": "/fields/System.Description", "value": $desc },
            { "op": "add", "path": "/fields/System.AssignedTo", "value": $assignee },
            { "op": "add", "path": "/fields/System.Tags", "value": $tags }
          ]')

        echo "üì¶ Payload for work item:"
        echo "$payload"

        # Compose API URL
        api_url="${ORG_URL}My%20First%20Project/_apis/wit/workitems/\$${WORKITEM_TYPE}?api-version=7.1-preview.3"
        echo "üåê API: $api_url"

        # Send API request
        http_code=$(curl -sS -o response.json -w "%{http_code}" \
          -X POST "$api_url" \
          -H "Content-Type: application/json-patch+json" \
          -H "Authorization: Bearer $SYSTEM_ACCESSTOKEN" \
          -d "$payload")

        echo "üîÅ API response code: $http_code"
        echo "üì® Response body:"
        cat response.json || echo "No response."

        if [[ "$http_code" == "200" || "$http_code" == "201" ]]; then
          echo "‚úÖ Work item created successfully."
        else
          echo "‚ùå Failed to create work item."
          exit 1
        fi

      else
        echo "‚úÖ Outage duration is within SLA. No work item needed."
      fi
